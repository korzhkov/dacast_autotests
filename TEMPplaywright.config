const { defineConfig, devices } = require('@playwright/test');
const { mkdirSync } = require('fs');
const { join } = require('path');

const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
const resultsDir = join(__dirname, 'test-results', timestamp);
const htmlReportDir = join(__dirname, 'html-report', timestamp);

mkdirSync(resultsDir, { recursive: true });

module.exports = defineConfig({
  testDir: './src',
  fullyParallel: true,
  forbidOnly: !!process.env.CI,
  retries: process.env.CI ? 2 : 0,
  workers: process.env.CI ? 1 : undefined,
  reporter: [
    ['list'], // Вывод результатов в консоль
    ['json', { outputFile: 'test-results/results.json' }], // Сохранение результатов в формате JSON
    ['html', { outputFolder: 'test-results/html-report' }] // Сохранение HTML отчета
  ],
  use: {
    trace: 'on-first-retry', // Включение трассировки на первой неудачной попытке
    video: 'retain-on-failure', // Сохранение видео при неудачных тестах
    screenshot: 'only-on-failure', // Сохранение скриншотов при неудачных тестах
    headless: false, // Set to true if you want to run tests in headless mode
    viewport: { width: 1280, height: 720 },
    actionTimeout: 0,
    ignoreHTTPSErrors: true,
  },
  projects: [
    /*{
      name: 'firefox',
      use: { ...devices['Desktop Firefox'] },
    },*/
    {
      name: 'chrome',
      use: { 
        ...devices['Desktop Chrome'],
        channel: 'chrome',
        permissions: ['clipboard-write'],
      },
    },
    /*{
      name: 'chromium',
      use: { 
        ...devices['Desktop Chrome'],
        permissions: ['clipboard-write'],
      },
    },*/
  ],
});